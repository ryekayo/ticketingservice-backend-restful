-- MySQL Script generated by MySQL Workbench
-- Tue Apr 26 13:26:37 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ticketing_system
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ticketing_system
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ticketing_system` DEFAULT CHARACTER SET utf8 ;
USE `ticketing_system` ;

-- -----------------------------------------------------
-- Table `ticketing_system`.`customer_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`customer_info` (
  `customerId` INT NOT NULL AUTO_INCREMENT,
  `customer_name` VARCHAR(256) NULL,
  `customer_email` VARCHAR(256) NULL,
  `customer_phone` VARCHAR(256) NULL,
  `company_name` VARCHAR(256) NULL,
  `priority` VARCHAR(256) NULL,
  `escalated` TINYINT(1) NOT NULL DEFAULT 0,
  UNIQUE INDEX `id_UNIQUE` (`customerId` ASC),
  UNIQUE INDEX `company_name_UNIQUE` (`company_name` ASC),
  UNIQUE INDEX `customer_phone_UNIQUE` (`customer_phone` ASC),
  UNIQUE INDEX `customer_email_UNIQUE` (`customer_email` ASC),
  UNIQUE INDEX `customer_name_UNIQUE` (`customer_name` ASC),
  PRIMARY KEY (`customerId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`user_ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`user_ticket` (
  `ticketId` INT NOT NULL AUTO_INCREMENT,
  `customerId` INT NOT NULL,
  `opened` DATETIME NOT NULL,
  `last_modified` DATETIME NOT NULL,
  `priority` VARCHAR(45) NULL,
  `case_owner` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `is_open` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ticketId`),
  UNIQUE INDEX `idtable1_UNIQUE` (`ticketId` ASC),
  UNIQUE INDEX `customer_id_UNIQUE` (`customerId` ASC),
  CONSTRAINT `fk_customerinfo_customerID`
    FOREIGN KEY (`customerId`)
    REFERENCES `ticketing_system`.`customer_info` (`customerId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`case_desc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`case_desc` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ticketId` INT NOT NULL,
  `description` LONGTEXT NULL,
  `last_modified` DATETIME NOT NULL,
  `opened_by` VARCHAR(256) NULL,
  `last_modified_by` VARCHAR(256) NULL,
  UNIQUE INDEX `id_UNIQUE` (`ticketId` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_casedesc_ticketId`
    FOREIGN KEY (`ticketId`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticketId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`escalation_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`escalation_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ticketId` INT NOT NULL,
  `is_escalated` TINYINT(1) NOT NULL DEFAULT 0,
  `date_escalated` DATETIME NULL,
  `assigned_to` VARCHAR(256) NOT NULL,
  `notes` VARCHAR(256) NULL,
  UNIQUE INDEX `id_UNIQUE` (`ticketId` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_escalationstatus_ticketId`
    FOREIGN KEY (`ticketId`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticketId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`user` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(45) NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`userId` ASC),
  UNIQUE INDEX `admin_username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_number_UNIQUE` (`phone_number` ASC),
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`user_roles` (
  `userRoleId` INT NOT NULL AUTO_INCREMENT,
  `userId` INT NOT NULL,
  `admin_access` TINYINT(1) NOT NULL DEFAULT 0,
  `moderator_access` TINYINT(1) NOT NULL DEFAULT 0,
  `observer_access` TINYINT(1) NOT NULL DEFAULT 0,
  `rolename` VARCHAR(45) NULL,
  UNIQUE INDEX `userId_UNIQUE` (`userId` ASC),
  UNIQUE INDEX `userRoleId_UNIQUE` (`userRoleId` ASC),
  UNIQUE INDEX `rolename_UNIQUE` (`rolename` ASC),
  PRIMARY KEY (`userRoleId`),
  CONSTRAINT `fk_userroles_userId`
    FOREIGN KEY (`userId`)
    REFERENCES `ticketing_system`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userroles_roleId`
    FOREIGN KEY (`userRoleId`)
    REFERENCES `ticketing_system`.`role` (`roleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`role` (
  `roleId` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NULL,
  `admin_access` TINYINT(1) NOT NULL DEFAULT 0,
  `moderator_access` TINYINT(1) NOT NULL DEFAULT 0,
  `observer_access` TINYINT(1) NOT NULL DEFAULT 0,
  INDEX `fk_userroles_roleId_idx` (`roleId` ASC),
  PRIMARY KEY (`roleId`),
  CONSTRAINT `fk_roles_roleId`
    FOREIGN KEY (`roleId`)
    REFERENCES `ticketing_system`.`user_roles` (`userRoleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`ticket_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`ticket_history` (
  `tickethistory_id` INT NOT NULL AUTO_INCREMENT,
  `ticketId` INT NOT NULL,
  `case_owner` VARCHAR(45) NOT NULL,
  `date_opened` DATETIME NULL,
  `last_modified` DATETIME NULL,
  `lastmod_by` VARCHAR(45) NOT NULL,
  `status_change` VARCHAR(45) NULL,
  `is_closed` TINYINT(1) NOT NULL DEFAULT 0,
  `email_timestamp` DATETIME NULL,
  `date_closed` DATETIME NULL,
  `is_escalated` TINYINT(1) NOT NULL DEFAULT 0,
  `date_escalated` DATETIME NULL,
  UNIQUE INDEX `ticket_number_UNIQUE` (`ticketId` ASC),
  PRIMARY KEY (`tickethistory_id`),
  UNIQUE INDEX `id_UNIQUE` (`tickethistory_id` ASC),
  CONSTRAINT `fk_tickethistory_ticketnumber`
    FOREIGN KEY (`ticketId`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticketId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`email_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`email_history` (
  `email_historyid` INT NOT NULL AUTO_INCREMENT,
  `ticketId` INT NOT NULL,
  `userId` INT NOT NULL,
  `email_timestamp` DATETIME NULL,
  `email_sent` LONGTEXT NULL,
  `from_email` VARCHAR(45) NULL,
  `to_email` VARCHAR(45) NULL,
  UNIQUE INDEX `id_UNIQUE` (`ticketId` ASC),
  PRIMARY KEY (`email_historyid`),
  UNIQUE INDEX `id_UNIQUE` (`email_historyid` ASC),
  UNIQUE INDEX `userId_UNIQUE` (`userId` ASC),
  CONSTRAINT `fk_emailhistory_ticketId`
    FOREIGN KEY (`ticketId`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticketId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_emailhistory_userId`
    FOREIGN KEY (`userId`)
    REFERENCES `ticketing_system`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
