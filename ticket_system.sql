-- MySQL Script generated by MySQL Workbench
-- Mon Apr  4 15:31:13 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ticketing_system
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ticketing_system
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ticketing_system` DEFAULT CHARACTER SET utf8 ;
USE `ticketing_system` ;

-- -----------------------------------------------------
-- Table `ticketing_system`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`customer` (
  `id` INT NOT NULL,
  `customer_name` VARCHAR(45) NOT NULL,
  `ticket_number` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `customer_name`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`user_ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`user_ticket` (
  `id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  `opened` DATETIME NULL,
  `priority` VARCHAR(45) NULL,
  `case_owner` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idtable1_UNIQUE` (`id` ASC),
  UNIQUE INDEX `ticket_number_UNIQUE` (`ticket_number` ASC),
  CONSTRAINT `fk_customer_customername`
    FOREIGN KEY (`id`)
    REFERENCES `ticketing_system`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`ticket_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`ticket_status` (
  `id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  `date_time_opened` DATETIME NULL,
  `last_modified` DATETIME NULL,
  `ticket_statuscol` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `is_open` TINYINT(1) NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ticket_number_UNIQUE` (`ticket_number` ASC),
  CONSTRAINT `fk_ticketstatus_ticket_number`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticket_number`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`case_desc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`case_desc` (
  `id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  `description` LONGTEXT NULL,
  `last_modified` DATETIME NOT NULL,
  `opened_by` VARCHAR(256) NULL,
  `last_modified_by` VARCHAR(256) NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ticket_number_UNIQUE` (`ticket_number` ASC),
  CONSTRAINT `fk_casedesc_ticket_number`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticket_number`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`customer_information`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`customer_information` (
  `id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  `customer_name` VARCHAR(256) NULL,
  `customer_email` VARCHAR(256) NULL,
  `customer_phone` VARCHAR(256) NULL,
  `company_name` VARCHAR(256) NULL,
  `priority` VARCHAR(256) NULL,
  `escalated` TINYINT(1) NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `ticket_number_UNIQUE` (`ticket_number` ASC),
  UNIQUE INDEX `company_name_UNIQUE` (`company_name` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customerinformation_ticket_number`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticket_number`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`escalation_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`escalation_status` (
  `id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  `is_escalated` TINYINT(1) NULL,
  `date_escalated` DATETIME NULL,
  `assigned_to` VARCHAR(256) NOT NULL,
  `notes` VARCHAR(256) NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ticket_number_UNIQUE` (`ticket_number` ASC),
  UNIQUE INDEX `assigned_to_UNIQUE` (`assigned_to` ASC),
  CONSTRAINT `fk_escalatonstatus_ticket_number`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticket_number`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`user` (
  `id` INT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(45) NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `admin_username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_number_UNIQUE` (`phone_number` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`user_roles` (
  `id` INT NOT NULL,
  `rolename` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `rolename_code` VARCHAR(45) NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_userroles_rolename_idx` (`rolename` ASC),
  CONSTRAINT `fk_userroles_rolename`
    FOREIGN KEY (`rolename`)
    REFERENCES `ticketing_system`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`ticket_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`ticket_history` (
  `id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  `case_owner` VARCHAR(45) NOT NULL,
  `date_opened` TIME NULL,
  `last_modified` TIME NULL,
  `lastmod_by` VARCHAR(45) NOT NULL,
  `status_change` VARCHAR(45) NULL,
  `is_closed` TINYINT(1) NOT NULL,
  `email_timestamp` DATETIME NULL,
  `date_closed` DATETIME NULL,
  `is_escalated` TINYINT(1) NOT NULL,
  `date_escalated` DATETIME NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `ticket_number_UNIQUE` (`ticket_number` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_tickethistory_ticketnumber`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticket_number`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketing_system`.`email_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketing_system`.`email_history` (
  `id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  `email_timestamp` DATETIME NULL,
  `email_sent` LONGTEXT NULL,
  `from_email` VARCHAR(45) NULL,
  `to_email` VARCHAR(45) NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ticket_number_UNIQUE` (`ticket_number` ASC),
  CONSTRAINT `fk_emailhistory_ticketnumber`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticketing_system`.`user_ticket` (`ticket_number`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
# ticketingservice-backend-restful
